// Solvers
macro NS1stOrder()
{
    solve NS ([ux, uy, p], [vx, vy, q], init = i) =
        int2d(Th)(
            alpha*(ux*vx + uy*vy)
            + nu*(dx(ux)*dx(vx) + dy(ux)*dy(vx)+ dx(uy)*dx(vy) + dy(uy)*dy(vy))
            - p*q*1e-8
            - p*dx(vx) - p*dy(vy)
            - dx(ux)*q - dy(uy)*q)
        - int2d(Th) (fx*vx + fy*vy)
        - int2d(Th) (alpha*convect([upx,upy], -dt, upx)*vx 
                    + alpha*convect([upx,upy], -dt, upy)*vy)
        + on(1, ux = clx, uy = cly)
        + on(3, ux = 0, uy = 0);
}//EOM


macro NS1stOrderDC()
{
    solve NS0 ([u0x, u0y, p0], [vx, vy, q], init = i) =
    int2d(Th)(
        alpha*(u0x*vx + u0y*vy)
        + (nu+sigma*Th.hmax) * (dx(u0x)*dx(vx) + dy(u0x)*dy(vx) + dx(u0y)*dx(vy) + dy(u0y)*dy(vy))
        - p0*q*1e-8
        - p0*dx(vx) - p0*dy(vy)
        - dx(u0x)*q - dy(u0y)*q
        )
	- int2d(Th) (fx*vx + fy*vy)
    + int2d(Th) ( 
        - alpha*convect([up0x,up0y], -dt, up0x)*vx 
        - alpha*convect([up0x,up0y], -dt, up0y)*vy)
    + on(1, u0x = clx, u0y = cly)
    + on(3, u0x = 0, u0y = 0);

    solve NS1 ([ux,uy,p], [vx,vy,q], init=i) =
    int2d(Th)(
        alpha*(ux*vx + uy*vy)
        + (nu+sigma*Th.hmax) * (dx(ux)*dx(vx) + dy(ux)*dy(vx) +  dx(uy)*dx(vy) + dy(uy)*dy(vy))
        - p*q*1e-8
        - p*dx(vx)+ p*dy(vy)
        - dx(ux)*q+ dy(uy)*q
        )
	- int2d(Th) (fx*vx + fy*vy)
    + int2d(Th) ( 
        - alpha*convect([upx,upy], -dt, upx)*vx 
        - alpha*convect([upx,upy], -dt, upy)*vy 
        )
    - int2d(Th) ( 
        sigma*Th.hmax*(dx(u0x)*dx(vx) + dy(u0x)*dy(vx) +  dx(u0y)*dx(vy) + dy(u0y)*dy(vy)) 
        ) 
  + on(1, ux = clx, uy = cly)
  + on(3, ux = 0, uy = 0);
} // EOM

macro Stokes()
{
    solve st([ux, uy, p], [vx, vy, q], init=i) =
        int2d(Th)(
                nu*(dx(ux)*dx(vx) + dy(ux)*dy(vx) + dx(uy)*dx(vy) + dy(uy)*dy(vy))
                - p*q*1e-8
                - p*dx(vx) - p*dy(vy)
                - dx(ux)*q - dy(uy)*q)
        - int2d(Th) (fx*vx + fy*vy)
        + on(1, ux = clx, uy = cly)
        + on(3, ux = 0.0, uy = 0.0);
} //EOM


macro Streamlines()
{
    solve Streamlines(psi, phi) =
        int2d(Th)(dx(psi)*dx(phi) + dy(psi)*dy(phi))
        + int2d(Th)(-phi*(dy(ux)-dx(uy)))
        + on(1,2,3, psi=0);	
} //EOM

